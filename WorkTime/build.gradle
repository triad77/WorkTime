
plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.2'
	id 'io.spring.dependency-management' version '1.1.2'
}

group = 'com.kbfng'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	
	querydsl.extendsFrom compileClasspath
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'
	implementation 'org.thymeleaf.extras:thymeleaf-extras-java8time:3.0.4.RELEASE'
	
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '32.1.2-jre'
		
	// https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
	implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.1.0'

	// Jackson
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: '2.15.2'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: '2.15.2'
	implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.15.2'

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.5.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	// https://mvnrepository.com/artifact/com.google.zxing/core
	implementation group: 'com.google.zxing', name: 'core', version: '3.5.2'
	// https://mvnrepository.com/artifact/com.google.zxing/javase
	implementation group: 'com.google.zxing', name: 'javase', version: '3.5.2'
	
	// p6spy logging(스프링부트 자동연결방식)
	implementation group: 'com.github.gavlyukovskiy', name: 'p6spy-spring-boot-starter', version: '1.9.0'
	
	// QueryDSL 을 사용하기 위한 라이브러리
	implementation "com.querydsl:querydsl-core:5.0.0"
	implementation "com.querydsl:querydsl-collections"
	implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
	// QClass를 생성하기 위한 라이브러리
	implementation "com.querydsl:querydsl-apt:5.0.0:jakarta"
	// @Entity 어노테이션을 선언한 클래스를 탐색하고, Q 클래스를 생성하기 위한 어노테이션 프로세서
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	// javax에서 jakarta로 이름변경에 따른 NoClassDefFoundError 대응을 위한 코드
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api:3.1.0"

	// https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20230618'

}

tasks.named('test') {
	useJUnitPlatform()
}

// gradle build 시 QClass 소스도 함께 build 하기 위해서 sourceSets 에 해당 위치를 추가
def querydslSrcDir = 'src/main/generated'
sourceSets {
  main {
    java {
      srcDirs += [ querydslSrcDir ]
    }
  }
}

// QClass의 Generated 를 import 할 때 javax.annotation.Generated로 import하도록 설정 
compileJava {
    options.compilerArgs << '-Aquerydsl.generatedAnnotationClass=javax.annotation.Generated'
}

// annotation processors 에서 생성한 소스 파일을 저장할 디렉토리를 지정
tasks.withType(JavaCompile) {
	options.generatedSourceOutputDirectory = file(querydslSrcDir)
}

// build 시에 생성되었던 QClass 를 모두 삭제
clean {
  delete file(querydslSrcDir)
}
